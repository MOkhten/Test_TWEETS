{"version":3,"file":"static/js/869.f19e0fac.chunk.js","mappings":"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","sources":["redux/user/selector.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","screens/Tweets/Tweets.jsx"],"sourcesContent":["// import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectUsers = state => state.users.users;\nexport const selectIsLoading = state => state.users.isLoading;\nexport const selectError = state => state.users.error;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\nimport cardPicture from '../../images/cardPicture.png';\nimport logo from '../../images/Vector.png';\nimport frame from '../../images/Ellipse 1 (Stroke).png';\nimport line from '../../images/Rectangle 1.png';\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\ntext-align: center;\njustify-content: center;\n`;\n\nexport const ButtonConteiner = styled.div`\ndisplay: block;\nwidth: 100%;\nmargin-bottom: 32px;\nmargin-right: 32px;\n\n`\nexport const LogoContainer = styled.div`\nbackground: url(${logo});\nposition: relative;\nmargin-top: 20px;\nmargin-left: 20px;\nwidth: 76px;\nheight: 22px;`\n\nexport const Card = styled.div`\nposition: relative;\ndisplay: flex;\nflex-wrap: wrap;\nmargin-bottom: 32px;\nmargin-right: 32px;\ntext-align: center;\njustify-content:  center;\nwidth: 380px;\nheight: 517px;\nbackground-color: #471CA9;\nborder-radius: 20px;\nbackground: linear-gradient(\n    114.99deg,\n    #471ca9 0%,\n    #5736a3 69.11%,\n    #4b2a99 100%\n  );\n  box-shadow: -2.58px 6.87px 20.62px rgba(0, 0, 0, 0.23);\n`\nexport const Img = styled.img`\nposition: absolute;\ntop: 208px;\nleft: 159px;\nwidth: 62px;\nheight: 62px;\nobject-fit: cover;\n  border-radius: 50%;\n  background: #5736a3;\n`\n\nexport const ImgWrapper = styled.div`\nbackground: url(${frame});\nbackground-repeat: no-repeat;\nposition: absolute;\ntop: 199px;\nleft: 145px;\nwidth: 80px;\nheight: 80px;\npadding-right: 5px;\npadding-left: -5px;\n`\n\nexport const TopImgStyled = styled.div`\nbackground: url(${cardPicture});\nbackground-size: contain;\n position: absolute;\n  margin-top: 6px;\n  margin-left:36px;\n  width: 308px;\n  height: 168px;`\n\nexport const UserInfo = styled.p`\n  text-transform: uppercase;\n  font-size: 20px;\n  font-family: Montserrat;\n  font-weight: 500;\n  color: #EBD8FF;\n  margin-top: 16px;\n  margin-bottom: 0px;`\n\nexport const Button = styled.button`\n  padding: 14px 56px 14px 56px;\n  color: #373737;\n  background-color: #EBD8FF;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 10.31px;\n  border-color: transparent;\n  margin-top: 26px;\n  margin-bottom: 34px;\n  cursor: pointer;\n  `\n\nexport const LineContainer = styled.div`\n margin-top: 192px;\n width: 380px;\n height: 8px;\n background: url(${line});\n box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n `\n\nexport const InfoContainer = styled.div`\n display: block;\n margin-top: 62px;`","import React, {useState} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUsers, selectIsLoading } from \"redux/user/selector\";\nimport { Spiner } from \"components/Spiner\";\nimport {\n  Card,\n  Img,\n  ImgWrapper,\n  TopImgStyled,\n  Container,\n  ButtonConteiner,\n  LogoContainer,\n  UserInfo,\n  Button,\n  LineContainer,\n  InfoContainer\n} from \"./CardList.styled\";\n\nexport const CardList = () => {\n  const user = useSelector(selectUsers);\n  const isLoading = useSelector(selectIsLoading);\n  \n  const [visibleCards, setVisibleCards] = useState(4);\n  \n  const loadMore = () => {\n    setVisibleCards(prevVisibleCards => prevVisibleCards + 4);\n   \n  };\n    return (\n        <Container>\n            {\n        user.length > 0 &&\n          user.slice(0, visibleCards).map(({ id, avatar, tweets, user, followers }) => {\n        return (\n            <Card key={id}>\n              <LogoContainer/>\n              <TopImgStyled />\n              <LineContainer/>\n              <ImgWrapper/>\n                <Img src={avatar} alt=\"usersAvatar\" />\n              \n              <InfoContainer>\n              <UserInfo>{user}</UserInfo>\n              <UserInfo>{tweets}  tweets</UserInfo>\n              <UserInfo>{followers}  followers</UserInfo>\n                <Button \n                  type=\"button\">FOLLOW</Button>\n                </InfoContainer>\n            </Card>\n        );\n          })}\n         {visibleCards < user.length && (\n        <ButtonConteiner >\n        <Button onClick={loadMore}>\n              LOAD MORE</Button>\n            {isLoading && <Spiner />}\n          </ButtonConteiner>\n          )}\n        </Container>\n    )\n}","import React, { useEffect } from \"react\";\nimport { useDispatch} from 'react-redux';\nimport { fetchUsers } from 'redux/user/operations';\nimport { CardList } from 'components/CardList/CardList';\n// import { Spiner } from \"components/Spiner\";\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n \n  return (\n    <div >\n      <CardList/> \n    </div>\n  );\n}\n\nexport default Tweets;"],"names":["selectUsers","state","users","selectIsLoading","isLoading","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","Container","styled","_templateObject","ButtonConteiner","_templateObject2","LogoContainer","_templateObject3","Card","_templateObject4","Img","_templateObject5","ImgWrapper","_templateObject6","TopImgStyled","_templateObject7","cardPicture","UserInfo","_templateObject8","Button","_templateObject9","LineContainer","_templateObject10","InfoContainer","_templateObject11","CardList","user","useSelector","_useState","useState","_useState2","_slicedToArray","visibleCards","setVisibleCards","_jsxs","children","length","map","_ref","id","avatar","tweets","followers","_jsx","src","alt","type","onClick","prevVisibleCards","Spiner","dispatch","useDispatch","useEffect","fetchUsers"],"sourceRoot":""}